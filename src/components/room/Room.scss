@use "../../styles/base/mixins/index" as *;
@use "../../styles/base/functions/index" as *;
@use "../../styles/base/variables/index" as *;
@use "../../styles/base/placeholders/index" as *;

@mixin create-card {
  .card {
    container-type: inline-size;
    position: relative;
    display: grid;
    place-items: center;
    aspect-ratio: 16 / 10;
    padding: 0;
    background-color: $color-transparent;
    border: none;
    border-radius: 1em;
    overflow: clip;
    cursor: pointer;
    box-shadow: 0 $gap-s $gap-xl 0 $color-shadow;

    &:focus-visible {
      --card-btn_translate-y: 0;
      --card-img_scale: 1.1;
      --card-btn_opacity: 1;
      z-index: 10;
    }

    @include mq-hover {
      --card-btn_translate-y: 0;
      --card-img_scale: 1.1;
      --card-btn_opacity: 1;
    }

    &__content {
      @extend %glass-dark;
      @include grid-columns(grid, 1fr auto, 3cqi, center, space-between, center);
      position: absolute;
      inset: auto 0 0 0;
      padding-block: var(--card-content_padding-block, clamp($gap-s, 2.5svb, $gap-l));
      padding-inline: var(--card-content_padding-inline, clamp($gap-l, 2.5svi, $gap-xl));
      transition: opacity $trans-time $trans-fnc;
      z-index: 2;

      @include mq-responsive(mobile-xl, max) {
        --card-content_padding-block: #{$gap-m};
      }
    }

    > img {
      position: absolute;
      display: block;
      inline-size: calc(100% + $gap-xs);
      opacity: var(--card-img_opacity, 1);
      scale: var(--card-img_scale, 1);
      transition:
        filter $trans-time $trans-fnc,
        scale calc($trans-time * 5) ease-out,
        opacity $trans-time $trans-fnc;
      z-index: 1;
      pointer-events: none;
    }

    .btn {
      opacity: var(--card-btn_opacity, 0);
      translate: 0 var(--card-btn_translate-y, 2.5cqb);
      transition:
        opacity $trans-time $trans-fnc,
        translate $trans-time $trans-fnc,
        box-shadow $trans-time $trans-fnc;

      @include mq-responsive(tablet, max) {
        --card-btn_translate-y: 0;
        --card-btn_opacity: 1;
        --btn_min-width: #{px-to-rem(112px)};
      }
    }

    strong {
      @extend %subtitle;
      border-radius: 1em;
      font-size: var(--card_fs, clamp($gap-l, 2.5svb, px-to-rem(20px)));
      color: $color-white;
      text-align: left;
      text-wrap: balance;
      text-wrap: pretty;

      @include mq-responsive(desktop-s, max){
        --card_fs: #{$gap-l};
      }

      @include mq-responsive(mobile-xl, max) {
        --card_fs: smaller;
      }
    }
  }

  .detail {
    @include grid-rows(var(--detail_display, none), auto 1fr auto, clamp($gap-xl, 2.5svb, 4rem), stretch, stretch);
    container-type: inline-size;
    inset: 0 0 0 auto;
    inline-size: var(--detail_inline-ize, min($width-desktop-s, 100%));
    block-size: 100vh;
    margin: 0;
    opacity: var(--detail_opacity, 0);
    border: none;
    translate: var(--detail_trans-x, 100%) 0;
    transition-duration: $trans-time;
    transition-property: overlay display opacity;
    transition-timing-function: $trans-fnc;
    transition-behavior: allow-discrete;

    @include mq-responsive(tablet, max) {
      --detail_inline-ize: min(#{px-to-rem(600px)}, 100%); 
    }

    @include mq-responsive(mobile-xl, max) {
      --detail_inline-ize: 100%;
      min-inline-size: 100%;
    }

    &[open] {
      --detail_display: grid;
      --detail_opacity: 1;
      --detail_trans-x: 0%;

      @starting-style {
        --dialog_opacity: 0;
        --detail_trans-x: 100%;
      }
    }

    &__header {
      @include flex-set(flex, row, nowrap, 0, flex-start, space-between, center);

      h3 {
        margin: 0;
        line-height: 1;
      }
    }

    &__close {
      @extend %close-button;
    }

    &__content {
      > p {
        margin: 0;
      }

      ul {
        @include flex-set(flex, column, nowrap, clamp($gap-l, 2svb, $gap-xl), flex-start, flex-start);
        padding: 0;
        margin: 0;
        margin-block-start: 2.5svb;
        list-style: none;

        li {
          @include flex-set(flex, row, nowrap, $gap-l, center);
          font-size: var(--detail-li_font-size, clamp(18px,2.5svb,22px));

          @include mq-responsive(mobile-xl, max) {
            --detail-li_font-size: #{$gap-l};
          }

          > .icon {
            --icon_size: #{$gap-2xl};
            fill: $color-secondary;

            @include mq-responsive(mobile-xl, max) {
              --icon_size: #{$gap-xl};
            }
          }
        }
      }
    }

    &__footer {
      @include flex-set(flex, row, nowrap, $gap-xl, flex-end, space-between, center);
    }

    &__price {
      @include flex-set(inline-flex, column, nowrap, $gap-m, flex-start, flex-end);
      font-size: var(--price_fs, clamp($gap-3xl, 5svb, 4rem));
      line-height: 1;

      @include mq-responsive(mobile-xl, max) {
        --price_fs: clamp(#{$gap-2xl}, 2.5svb, #{$gap-3xl});
      }

      > span {
        font-size: clamp($gap-l, .5em, $gap-xl);
        color: $color-text;
      }

      > strong {
        font-size: 1em;
        font-weight: 900;
        color: $color-title;
        
      }
    }

    &__hidden-pics {
      display: none;
    }
  }

  .gallery {
    margin-block-start: 2.5svb;
    margin-block-end: 5svb;

    &__item {
      position: relative;
      display: inline-block;
      border-radius: 1em;
      overflow: hidden;
      box-shadow: 0 $gap-m $gap-l 0 $color-shadow;

      @include mq-hover {
        --gallery-btn_scale: 1.15;
      }

      img {
        display: block;
        max-inline-size: var(--gallery-img_max-width, px-to-rem(320px));

        @include mq-responsive(tablet, max) {
          --gallery-img_max-width: #{px-to-rem(260px)};
        }
      }
    }

    &__item-btn {
      @extend %glass-dark;
      position: absolute;
      inset: auto $gap-l $gap-l auto;
      display: grid;
      place-items: center;
      inline-size: 4rem;
      aspect-ratio: 1;
      border-radius: $radius-circle;
      color: $color-white;
      z-index: 2;

      > .icon {
        --icon_size: #{$gap-xl};
        scale: var(--gallery-btn_scale, 1);
        transition: scale $trans-time $trans-fnc;
      }
    }
  }
}