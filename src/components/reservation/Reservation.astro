---
import FormItem from "../formItem/FormItem.astro";
import Icon from "../icons/Icon.astro";
import { getCollection } from "astro:content";
import { getLangFromUrl, useTranslations } from "../../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const reservationCollection = await getCollection("reservation");
const reservationContent = reservationCollection.find(
  (entry) => entry.slug === lang
);

if (!reservationContent) {
  throw new Error(`Content for language ${lang} not found`);
}

const { data, body } = reservationContent;
const { title } = data;

const t = useTranslations(lang);

const today = new Date().toISOString().split("T")[0];
---

<dialog class="reservation">
  <form
    id="reservationForm"
    class="reservation__form"
    method="post"
    action="/send-email.php"
  >
    <div class="reservation__header">
      <h3>{title}</h3>
      <button
        class="reservation__close"
        type="button"
        aria-label={t("reservation.btn.close")}
        title={t("reservation.btn.close")}
        id="reservationClose"
      >
        <Icon name="close" />
      </button>
    </div>
    <p>
      {body}
    </p>
    <div>
      <fieldset>
        <legend>{t("reservation.subtitle.date")}</legend>
        <p>{t("reservation.desc.date")}</p>
        <FormItem label={t("reservation.formLabel.from")}>
          <input type="date" name="from" required min={today} />
        </FormItem>
        <FormItem label={t("reservation.formLabel.to")}>
          <input type="date" name="to" required min={today} />
        </FormItem>
      </fieldset>
      <fieldset>
        <legend>{t("reservation.subtitle.contactInfo")}</legend>
        <p>{t("reservation.desc.contactInfo")}</p>
        <FormItem label={t("reservation.formLabel.firstName")}>
          <input type="text" name="fname" required />
        </FormItem>
        <FormItem label={t("reservation.formLabel.lastName")}>
          <input type="text" name="lname" required />
        </FormItem>
        <FormItem label={t("reservation.formLabel.email")}>
          <input
            type="email"
            placeholder="john@doe.com"
            name="email"
            required
          />
        </FormItem>
        <FormItem label={t("reservation.formLabel.phone")}>
          <input type="tel" placeholder="+420123456789" name="phone" required />
        </FormItem>
        <FormItem label={t("reservation.formLabel.note")}>
          <textarea name="note"></textarea>
        </FormItem>
      </fieldset>
    </div>
    <fieldset>
      <legend>{t("reservation.subtitle.rooms")}</legend>
      <p>{t("reservation.desc.rooms")}</p>
      <div class="col-span-2">
        <p class="reservation__empty-message">
          {t("reservation.message.emptyRooms")}
        </p>
        <div id="roomsList" class="reservation__room-list"></div>
        <div class="reservation__actions">
          <label
            class="check-box"
            title={t("reservation.formLabel.breakfast.title")}
          >
            <input type="checkbox" name="breakfast" value="1" />
            {t("reservation.formLabel.breakfast")}
          </label>
          <button
            type="button"
            id="addRoom"
            class="btn btn--small btn--secondary"
          >
            {t("reservation.btn.addRoom")}
            <Icon name="plus" />
          </button>
        </div>
      </div>
    </fieldset>
    <div class="reservation__footer">
      <button class="btn btn--secondary" type="button" id="cancelBtn">
        {t("reservation.btn.cancel")}
      </button>
      <button class="btn btn--primary" type="submit" id="submitBtn">
        {t("reservation.btn.submit")}
      </button>
    </div>
  </form>
</dialog>

<dialog id="successDialog" class="success-dialog">
  <div class="d-grid gap-l">
    <div class="reservation__header">
      <h4>{t("reservation.message.title")}</h4>
      <button
        class="reservation__close"
        type="button"
        id="closeSuccessDialog"
        aria-label={t("btn.close")}
        title={t("btn.close")}
      >
        <Icon name="close" />
      </button>
    </div>
    <p>{t("reservation.message.thankyou")}</p>
  </div>
</dialog>

<script>
  import { initReservation } from "./Reservation.ts";

  document.addEventListener("DOMContentLoaded", () => {
    initReservation();

    const urlParams = new URLSearchParams(window.location.search);
    const successDialog = document.getElementById(
      "successDialog"
    ) as HTMLDialogElement;
    const closeSuccessDialogButton = document.getElementById(
      "closeSuccessDialog"
    ) as HTMLButtonElement;

    if (urlParams.has("reservated") && urlParams.get("reservated") === "true") {
      if (successDialog) {
        successDialog.showModal();
      }
    }

    if (closeSuccessDialogButton) {
      closeSuccessDialogButton.addEventListener("click", () => {
        successDialog.close();
      });
    }

    const form = document.getElementById("reservationForm") as HTMLFormElement;

    if (form) {
      form.addEventListener("submit", async (event) => {
        event.preventDefault();

        const formData = new FormData(form);

        try {
          const response = await fetch(form.action, {
            method: "POST",
            body: formData,
          });

          if (response.ok) {
            window.location.href =
              window.location.pathname + "?reservated=true";
          } else {
            const errorText = await response.text();
            console.error("Failed to send email:", errorText);
            alert("Failed to send email");
          }
        } catch (error) {
          console.error("Error:", error);
          alert("An error occurred while sending the email");
        }
      });
    }
  });
</script>
