@use "../../styles/base/mixins/index" as *;
@use "../../styles/base/functions/index" as *;
@use "../../styles/base/variables/index" as *;
@use "../../styles/base/placeholders/index" as *;

@mixin create-reservation {
    .reservation {
        top: 5svb;
        left: 50%;
        display: var(--dialog_display, none);
        inline-size: $width-desktop-l;
        max-block-size: 90svb;
        margin: 0;
        background-color: $color-white;
        opacity: var(--dialog_opacity, 0);
        border-radius: 1em;
        translate: -50% var(--dialog_trans-y, 5svb);
        transition-duration: 0.3s;
        transition-property: overlay display opacity;
        box-shadow: 0 $gap-s $gap-xl 0 $color-shadow;
        transition-behavior: allow-discrete;

        &[open] {
            --dialog_display: block;
            --dialog_opacity: 1;
            --dialog_trans-y: 0;

            @starting-style {
                --dialog_opacity: 0;
                --dialog_trans-y: 5svb;
            }
        }

        &:has(.reservation__room) {
            --empty-message_display: none;
            --breakfast-chck_opacity: 1;
            --breakfast-chck_pointer-events: auto;
        }

        &__form {
            @include grid-columns(
                grid,
                repeat(var(--form_col-count, 2), 1fr),
                clamp($gap-l, 2.5svi, $gap-3xl),
                stretch
            );

            @include mq-responsive(tablet, max) {
                --form_col-count: 1;
            }

            fieldset {
                @include grid-columns(
                    grid,
                    repeat(var(--fieldet_col-count, 2), 1fr),
                    $gap-xl,
                    stretch
                );
                row-gap: $gap-l;
                padding-block: $gap-m;
                padding-inline: clamp($gap-l, 2svi, $gap-xl);
                border: none;
                border-block-start: $border-width solid $color-border;

                &:has(select) {
                    @include grid-columns(grid, 1fr, $gap-l, flex-end);
                }

                > legend {
                    padding-inline: $gap-s;
                    background-color: $color-white;
                    font-size: clamp($gap-xl, 3svb, $gap-2xl);
                    color: $color-label;
                    translate: num-neg($gap-s) 0;
                }

                > p {
                    @include grid-col-span(2);
                    margin-block-end: $gap-l;
                    font-size: $gap-l;
                    color: $color-text;
                }

                + fieldset {
                    margin-block-start: $gap-xl;
                }
            }

            > :where(h3, p){
                @include grid-col-span(2);
                max-inline-size: unset;
                margin: 0;

                @include mq-responsive(tablet, max) {
                    @include grid-col-span(1);
                }
            }
        }

        &__close {
           @extend %close-button;
        }

        &__empty-message {
            display: var(--empty-message_display, block);
            padding: $gap-l $gap-xl;
            margin-block-end: $gap-l;
            background-color: $color-warning;
            border-radius: $radius-m;
            font-size: $gap-l;
            color: $color-text;
        }

        &__room {
            @include grid-col-span(2);
            @include grid-columns(grid, 1fr 120px auto, $gap-xl, flex-end);
            row-gap: $gap-l;

            > div[id*="separateBedsContainer"]:empty{
                display: none;
            }
        }

        &__room-list {
            @include grid-columns(grid, 1fr, 0, flex-end);
            max-block-size: 40svb;
            padding-inline-end: $gap-m;
            overflow: auto;
            overscroll-behavior: contain;

            &:empty{
                display: none;
            }

            hr{
                margin-block: $gap-xl;
                color: $color-border;
            }
        }

        &__footer{
            @include grid-col-span(2);
            padding-block-start: $gap-2xl;
            text-align: right;
            background-color: $color-white;

            @include mq-responsive(tablet, max) {
                @include grid-col-span(1);
                position: sticky;
                inset: auto 0 0 0;
                padding-block: $gap-xl;
            }
        }

        &__actions{
            @include grid-col-span(2);
            @include flex-set(flex, row, nowrap, $gap-l, center, space-between);

            .check-box{
                opacity: var(--breakfast-chck_opacity, 0);
                pointer-events: var(--breakfast-chck_pointer-events, none);;
            }
        }
    }
}
